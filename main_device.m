function fig_hdl = main_device
% MAIN_DEVICE_BUILD
%-------------------------------------------------------------------------------
% File name   : main_device.m           
% Generated on: 17-May-2015 00:21:38          
% Description :
%
% SINTAXE: >> main_device
%
% The GUI in this example allows integrate a second-order dynamic system,
% or shows the corresponding transfer function's response.
%
% If the user click on "Integration of the 2nd ODE" a new window is open 
% and the result of integration is displayed. In this window, click on 
% "Get TF" button to get the transfer function corresponding. 
% Button "Back" return to main_device
%
% If the user click on "Tranfer function 2nd" a new window is open and
% shows the step response of a second-order dynamic system of fixed 
% natural frequency. The GUI includes a zero-poles-gain values as well 
% as pole-zero plot of dynamic system. 
%
% In both, set the initial values of dynamic system of second order to 
% create the system model.
%
%
% Author: Matilde Pos-de-Mina Pato
% Date: May, 13 2015
% version: 1
% email: mpato@deetc.isel.pt

%
% BUGS and SUGGESTIONS: please submit the issue to the above email.

% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help main_device

%-------------------------------------------------------------------------------


% Initialize handles structure
handles = struct();

% Create all UI controls
build_gui();

% Assign function output
fig_hdl = handles.maindevice;

%% ---------------------------------------------------------------------------
	function build_gui()
% Creation of all uicontrols

		% --- FIGURE -------------------------------------
		handles.maindevice = figure( ...
			'Tag', 'maindevice', ...
			'Units', 'characters', ...
			'Position', [103.833333333333 19 79.5 42.5], ...
			'Name', 'DEvICe', ...
			'MenuBar', 'none', ...
			'NumberTitle', 'off', ...
			'Color', [1 1 1]);

		% --- CONTEXT MENUS -------------------------------------
		handles.File = uicontextmenu( ...
			'Parent', handles.maindevice, ...
			'Tag', 'File', ...
			'Visible', 'off', ...
			'Callback', @File_Callback);

		% --- MENU ITEMS -------------------------------------
		handles.Untitled_file = uimenu( ...
			'Parent', handles.maindevice, ...
			'Tag', 'Untitled_file', ...
			'Label', 'File', ...
			'Checked', 'off', ...
			'Callback', @Untitled_file_Callback);

		handles.Close = uimenu( ...
			'Parent', handles.Untitled_file, ...
			'Tag', 'Close', ...
			'Label', 'Close', ...
			'Checked', 'off', ...
			'Callback', @Close_Callback);

		handles.close = uimenu( ...
			'Parent', handles.File, ...
			'Tag', 'close', ...
			'Label', 'Close', ...
			'Checked', 'on', ...
			'Callback', @close_Callback);

		handles.Help = uimenu( ...
			'Parent', handles.maindevice, ...
			'Tag', 'Help', ...
			'Label', 'Help', ...
			'Checked', 'off', ...
			'Callback', @Help_Callback);

		handles.about = uimenu( ...
			'Parent', handles.Help, ...
			'Tag', 'about', ...
			'Label', 'About', ...
			'Checked', 'off', ...
			'Callback', @about_Callback);

		handles.getting_help = uimenu( ...
			'Parent', handles.Help, ...
			'Tag', 'getting_help', ...
			'Label', 'Getting help', ...
			'Checked', 'off', ...
			'Callback', @getting_help_Callback);

		% --- AXES -------------------------------------
		handles.axes1 = axes( ...
			'Parent', handles.maindevice, ...
			'Tag', 'axes1', ...
			'Visible', 'off', ...
			'Units', 'characters', ...
			'Position', [2.83333333333333 30.8333333333333 34.6666666666667 10.4166666666667]);

		handles.axes2 = axes( ...
			'Parent', handles.maindevice, ...
			'Tag', 'axes2', ...
			'Visible', 'off', ...
			'Units', 'characters', ...
			'Position', [39 30.75 34.1666666666667 10.5]);

		% --- STATIC TEXTS -------------------------------------
		handles.text1 = uicontrol( ...
			'Parent', handles.maindevice, ...
			'Tag', 'text1', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [11.6666666666667 19.25 49.5 4.75], ...
			'FontName', 'Helvetica', ...
			'FontSize', 16, ...
			'FontWeight', 'bold', ...
			'ForegroundColor', [0.0706 0.212 0.141], ...
			'BackgroundColor', [1 1 1], ...
			'String', {'Created by Matilde P.M. Pato','','version 1   *   May 2015'});

		handles.text2 = uicontrol( ...
			'Parent', handles.maindevice, ...
			'Tag', 'text2', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [6 26.25 65.8333333333333 3.41666666666667], ...
			'FontAngle', 'italic', ...
			'FontName', 'Times', ...
			'FontSize', 22, ...
			'FontWeight', 'bold', ...
			'ForegroundColor', [0.847 0.161 0], ...
			'BackgroundColor', [1 1 1], ...
			'String', 'DEvICe - Dynamical systEms In Control');

		% --- PUSHBUTTONS -------------------------------------
		handles.pushbutton_close = uicontrol( ...
			'Parent', handles.maindevice, ...
			'Tag', 'pushbutton_close', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [12.3333333333333 1.16666666666667 53 4.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'FontWeight', 'bold', ...
			'String', 'Close', ...
			'Callback', @pushbutton_close_Callback);

		handles.pushbutton_tf = uicontrol( ...
			'Parent', handles.maindevice, ...
			'Tag', 'pushbutton_tf', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [12.3333333333333 7.08333333333333 53 4.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'FontWeight', 'bold', ...
			'String', 'Transfer function 2nd', ...
			'Callback', @pushbutton_tf_Callback);

		handles.pushbutton_ode = uicontrol( ...
			'Parent', handles.maindevice, ...
			'Tag', 'pushbutton_ode', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [12.3333333333333 13 53 4.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'FontWeight', 'bold', ...
			'String', 'Integration of the 2nd ODE', ...
			'Callback', @pushbutton_ode_Callback);

    axes(handles.axes1);
    im1=imread('wordle.png');
    bigim1 = imresize(im1,20);
    image(bigim1);

    axis image; axis off;

    axes(handles.axes2);
    im2=imread('results.png');
    bigim2 = imresize(im2,20);
    image(bigim2);

    axis image; axis off;
    
    % Disable all warning messages from command window
    warning off;    
    end
    % Image

   

%% ---------------------------------------------------------------------------
	function File_Callback(hObject,evendata) %#ok<INUSD>

	end

%% ---------------------------------------------------------------------------
	function Untitled_file_Callback(hObject,evendata) %#ok<INUSD>

	end

%% ---------------------------------------------------------------------------
	function Close_Callback(hObject,evendata) %#ok<INUSD>

        close all;

	end

%% ---------------------------------------------------------------------------
	function close_Callback(hObject,evendata) %#ok<INUSD>

        close all;

	end

%% ---------------------------------------------------------------------------
	function Help_Callback(hObject,evendata) %#ok<INUSD>

	end

%% ---------------------------------------------------------------------------
	function about_Callback(hObject,evendata) %#ok<INUSD>
    
        % Create an about box
        str = {[mfilename,' is developed by Matilde Pato.'];...
            'ADEQ - ISEL ';...
            ' ';...
            'mpato@deetc.isel.pt';...
            'April 2015'};
        msgbox(str,'About','Help','modal');

	end

%% ---------------------------------------------------------------------------
	function getting_help_Callback(hObject,evendata) %#ok<INUSD>

        % Just view the help for the primary function in this file
        doc(mfilename);
        
    end

%% ---------------------------------------------------------------------------
	function pushbutton_close_Callback(hObject,evendata) %#ok<INUSD>

        close all;

	end

%% ---------------------------------------------------------------------------
	function pushbutton_tf_Callback(hObject,evendata) %#ok<INUSD>
    
        device_tf;

	end

%% ---------------------------------------------------------------------------
	function pushbutton_ode_Callback(hObject,evendata) %#ok<INUSD>

        device_ode;

	end

end
