function fig_hdl = device_ode
% DEVICE_ODE
%-------------------------------------------------------------------------------
% File name   : device_ode.m            
% Generated on: 17-May-2015 00:04:49          
% Description : 
%
% Important: this file is a part of a main_device.m file
% 
% SINTAXE: >> device_ode
%
% The GUI in this example allows integrate a second-order dynamic system,
% or shows the corresponding transfer function's response.
%
% If the user click on "Integration of the 2nd ODE" a new window is open 
% and the result of integration is displayed. In this window, click on 
% "Get TF" button to get the transfer function corresponding. 
% Button "Back" return to main_device
%
% Set the initial values of dynamic system of second order to 
% create the system model.
%
%
% Author: Matilde Pos-de-Mina Pato
% Date: May, 13 2015
% version: 1
% email: mpato@deetc.isel.pt

%
% BUGS and SUGGESTIONS: please submit the issue to the above email.
%-------------------------------------------------------------------------------


% Initialize handles structure
handles = struct();

% Create all UI controls
build_gui();

% Assign function output
fig_hdl = handles.device_ode;

%% ---------------------------------------------------------------------------
	function build_gui()
% Creation of all uicontrols

		% --- FIGURE -------------------------------------
		handles.device_ode = figure( ...
			'Tag', 'device_ode', ...
			'Units', 'characters', ...
			'Position', [103.833333333333 21.5 121.833333333333 40], ...
			'Name', 'DEvICe - ODE', ...
			'MenuBar', 'none', ...
			'NumberTitle', 'off', ...
			'Color', [1 1 1]);

		% --- PANELS -------------------------------------
		handles.uipanel3 = uipanel( ...
			'Parent', handles.device_ode, ...
			'Tag', 'uipanel3', ...
			'Units', 'characters', ...
			'Position', [3 3.75 52 32.0833333333333], ...
			'FontAngle', 'italic', ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'Title', 'Input', ...
			'ShadowColor', [0 0 0]);

		handles.uipanel2 = uipanel( ...
			'Parent', handles.device_ode, ...
			'Tag', 'uipanel2', ...
			'Units', 'characters', ...
			'Position', [4.16666666666667 4.83333333333333 48.8333333333333 21.1666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'Title', '2nd order ODE', ...
			'ShadowColor', [0 0 0]);

		handles.uipanel5 = uipanel( ...
			'Parent', handles.device_ode, ...
			'Tag', 'uipanel5', ...
			'Units', 'characters', ...
			'Position', [56.6666666666667 3.75 64.3333333333333 32.0833333333333], ...
			'FontAngle', 'italic', ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'Title', 'Results', ...
			'ShadowColor', [0 0 0]);

		% --- AXES -------------------------------------
		handles.axes2 = axes( ...
			'Parent', handles.uipanel3, ...
			'Tag', 'axes2', ...
			'Visible', 'off', ...
			'Units', 'characters', ...
			'Position', [5 23.5 41.8333333333333 5.83333333333333]);

		handles.axes1 = axes( ...
			'Parent', handles.uipanel5, ...
			'Tag', 'axes1', ...
			'Visible', 'off', ...
			'Units', 'characters', ...
			'Position', [4.66666666666667 1.91666666666666 57.5 27.6666666666667]);

		% --- STATIC TEXTS -------------------------------------
		handles.text13 = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'text13', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [94.6666666666667 1.33333333333333 25.1666666666667 2.16666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'FontWeight', 'bold', ...
			'ForegroundColor', [0.0706 0.212 0.141], ...
			'BackgroundColor', [1 1 1], ...
			'String', {'created by Matilde Pato   ','version 1 * May 2015  '}, ...
			'HorizontalAlignment', 'right');

		handles.text3 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text3', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [3 16 8.66666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'K - gain');

		handles.text4 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text4', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [13.3333333333333 16 15.6666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'tau - time constant');

		handles.text5 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text5', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [29.5 16 18.1666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'zeta - damping factor');

		handles.text1 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text1', ...
			'Style', 'text', ...
			'Units', 'pixels', ...
			'Position', [10 240 88 13], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'String', '2nd order ODE');

		handles.text2 = uicontrol( ...
			'Parent', handles.uipanel3, ...
			'Tag', 'text2', ...
			'Style', 'text', ...
			'Units', 'pixels', ...
			'Position', [10 369 40 15], ...
			'FontAngle', 'italic', ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Input');

		handles.text3 = uicontrol( ...
			'Parent', handles.uipanel5, ...
			'Tag', 'text3', ...
			'Style', 'text', ...
			'Units', 'pixels', ...
			'Position', [10 369 56 15], ...
			'FontAngle', 'italic', ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'FontWeight', 'bold', ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Results');

		handles.text14 = uicontrol( ...
			'Parent', handles.uipanel5, ...
			'Tag', 'text14', ...
			'Visible', 'off', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [3 9.66666666666666 56.8333333333333 15.9166666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'BackgroundColor', [1 1 1], ...
			'String', {'Static Text'}, ...
			'HorizontalAlignment', 'left');

		handles.text1 = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'text1', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [28.3333333333333 36.2499999999999 59.5 3.41666666666667], ...
			'FontAngle', 'italic', ...
			'FontName', 'Times', ...
			'FontSize', 19.9999999999994, ...
			'FontWeight', 'bold', ...
			'ForegroundColor', [0.0706 0.212 0.141], ...
			'BackgroundColor', [1 1 1], ...
			'String', 'DEvICe - Ordinary Differential Equations');

		handles.text6 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text6', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [0.666666666666667 11.1666666666666 17 1.5], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Initial conditions', ...
			'HorizontalAlignment', 'left');

		handles.text7 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text7', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [19 9.33333333333332 8.66666666666667 1.41666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'y'' (0)');

		handles.text8 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text8', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [3.66666666666667 9.41666666666666 8.66666666666667 1.41666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'y(0)');

		handles.text9 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text9', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [0.666666666666667 4.91666666666666 17 1.5], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Integration time', ...
			'HorizontalAlignment', 'left');

		handles.text10 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text10', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [3.66666666666667 3.41666666666666 8.66666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Initial time');

		handles.text11 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text11', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [19.6666666666667 3.41666666666666 8.66666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Step time');

		handles.text12 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text12', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [34.8333333333333 3.41666666666666 8.66666666666667 1.08333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Final time');

		handles.text15 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'text15', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [0.833333333333333 17.1666666666667 17 1.5], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'BackgroundColor', [1 1 1], ...
			'String', 'Coefficients', ...
			'HorizontalAlignment', 'left');

		% --- PUSHBUTTONS -------------------------------------
		handles.pushbutton_plot = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'pushbutton_plot', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2.83333333333333 0.25 16.8333333333333 2.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'String', 'Plot', ...
			'Callback', @pushbutton_plot_Callback);

		handles.pushbutton_reset = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'pushbutton_reset', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [58 0.25 16.8333333333333 2.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'String', 'Reset', ...
			'Callback', @pushbutton_reset_Callback);

		handles.pushbutton_back = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'pushbutton_back', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [76.6666666666667 0.25 16.8333333333333 2.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'String', 'Back', ...
			'Callback', @pushbutton_back_Callback);

		handles.pushbutton_tf = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'pushbutton_tf', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [20.5 0.25 16.8333333333333 2.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'String', 'Get Transfer Function', ...
			'Callback', @pushbutton_tf_Callback);

		handles.pushbutton_save = uicontrol( ...
			'Parent', handles.device_ode, ...
			'Tag', 'pushbutton_save', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [38.1666666666667 0.25 16.8333333333333 2.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 12, ...
			'String', 'Save', ...
			'Enable', 'off', ...
			'Callback', @pushbutton_save_Callback);

		% --- EDIT TEXTS -------------------------------------
		handles.edit_K = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_K', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [2 13.8333333333333 11.3333333333333 1.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '1.0', ...
			'Callback', @edit_K_Callback, ...
			'CreateFcn', @edit_K_CreateFcn);

		handles.edit_tau = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_tau', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [17.8333333333333 13.8333333333333 11.3333333333333 1.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '1.0', ...
			'Callback', @edit_tau_Callback, ...
			'CreateFcn', @edit_tau_CreateFcn);

		handles.edit_zeta = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_zeta', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [33.5 13.8333333333333 11.3333333333333 1.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '1.0', ...
			'Callback', @edit_zeta_Callback, ...
			'CreateFcn', @edit_zeta_CreateFcn);

		handles.edit_y0 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_y0', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [2 7.33333333333333 11.3333333333333 1.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '0', ...
			'Callback', @edit_y0_Callback, ...
			'CreateFcn', @edit_y0_CreateFcn);

		handles.edit_dy0 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_dy0', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [17.8333333333333 7.33333333333333 11.3333333333333 1.91666666666667], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '1.0', ...
			'Callback', @edit_dy0_Callback, ...
			'CreateFcn', @edit_dy0_CreateFcn);

		handles.edit_t0 = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_t0', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [1.83333333333333 1.08333333333333 11.6666666666667 1.83333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '0', ...
			'Callback', @edit_t0_Callback, ...
			'CreateFcn', @edit_t0_CreateFcn);

		handles.edit_step = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_step', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [17.6666666666667 1.08333333333333 11.6666666666667 1.83333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '0.1', ...
			'Callback', @edit_step_Callback, ...
			'CreateFcn', @edit_step_CreateFcn);

		handles.edit_tf = uicontrol( ...
			'Parent', handles.uipanel2, ...
			'Tag', 'edit_tf', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [33.3333333333333 1.08333333333333 11.6666666666667 1.83333333333333], ...
			'FontName', 'Helvetica', ...
			'FontSize', 9.99999999999967, ...
			'BackgroundColor', [1 1 1], ...
			'String', '10', ...
			'Callback', @edit_tf_Callback, ...
			'CreateFcn', @edit_tf_CreateFcn);


    end

% --- Executes just before device_ode is made visible.
%function device_ode_OpeningFcn(hObject, eventdata, handles, varargin) %#ok<*DEFNU>
% This function has no output args, see OutputFcn.

    % Create the data of the background
    % Assign gui, plot, reset, coefficents parameters, initial conditions and
    % period time to integration handles to the base workspace
    assignin('base','device_ode_handles',handles);
    assignin('base','plot_hObject',handles.pushbutton_plot);
    assignin('base','tf_hObject',handles.pushbutton_tf);
    assignin('base','reset_hObject',handles.pushbutton_reset);
    assignin('base','back_hObject',handles.pushbutton_back);

    assignin('base','K_hObject',handles.edit_K);
    assignin('base','tau_hObject',handles.edit_tau);
    assignin('base','zeta_hObject',handles.edit_zeta);

    assignin('base','y0_hObject',handles.edit_y0);
    assignin('base','dy0_hObject',handles.edit_dy0);

    assignin('base','t0_hObject',handles.edit_t0);
    assignin('base','step_hObject',handles.edit_step);
    assignin('base','tf_hObject',handles.edit_tf);

    % pushbutton_save not visible 
    set(handles.pushbutton_save,'enable','off');
        
    
    %The GUI handles are by default hidden, turn them on
    set(0,'ShowHiddenHandles','on');

    axes(handles.axes2);
    im=imread('ODE.png');
    bigim = imresize(im,20);
    image(bigim);
    axis image; axis off,

    % Delete static text   
        set(handles.text14,'visible','off');

    % Delete plot 
        cla(handles.axes1); % Make averSpec the current axes.
        set(handles.axes1,'visible','off');

    % Disable all warning messages from command window
    warning off; %#ok<*WNOFF>
    
%% ---------------------------------------------------------------------------
	function pushbutton_plot_Callback(hObject,evendata) %#ok<INUSD>
    % Validate that the text in the coefficients parameters K, tau, zeta
     % field converts to a real number

        K = str2num(get(handles.edit_K, 'String'));
        tau = str2num(get(handles.edit_tau, 'String'));
        zeta = str2num(get(handles.edit_zeta, 'String'));

     % Validate that the text in the initial conditions y0 and dy0
     % field converts to a real number

        y0 = str2num(get(handles.edit_y0, 'String'));
        dy0 = str2num(get(handles.edit_dy0, 'String'));

     % Validate that the text in the time period of integration
     % field converts to a real number

        t0 = str2num(get(handles.edit_t0, 'String'));
        step = str2num(get(handles.edit_step, 'String'));
        tf = str2num(get(handles.edit_tf, 'String'));

        [t,dy] = ode23(@system,t0:step:tf,[y0 dy0],[],[K,tau,zeta]);

        % Delete static text   
        set(handles.text14,'visible','off');

        % Create time plot in proper axes
        set(handles.axes1,'Visible','on');

        plot(handles.axes1,t,dy(:,1),'-.r','LineWidth',1.5);
        set(handles.axes1,'XMinorTick','on');
        set(handles.axes1,'YMinorTick','on');

        % pushbutton_save not visible 
        set(handles.pushbutton_save,'enable','on');

	end

%% ---------------------------------------------------------------------------
	function pushbutton_reset_Callback(hObject,evendata) %#ok<INUSD>
    % restart

        valueofcoeff = 1;
        valueofinitial = 0;
        valueoftf = 10;

        strofcoeff = num2str(valueofcoeff);
        strofinitial = num2str(valueofinitial);
        stroftf = num2str(valueoftf);

        % Set the value of the coefficients: K, tau and zeta, and initial conditions
        % y0 and dy0 to the new values set in the GUI 
        set(handles.edit_K,'String',strofcoeff);
        set(handles.edit_tau,'String',strofcoeff);
        set(handles.edit_zeta,'String',strofcoeff);
        set(handles.edit_y0,'String',strofinitial);
        set(handles.edit_dy0,'String',strofcoeff);

        set(handles.edit_t0,'String',strofinitial);
        set(handles.edit_step,'String',strofcoeff);
        set(handles.edit_tf,'String',stroftf);

        % Delete plot 
            cla(handles.axes1,'reset'); % Make averSpec the current axes.
            set(handles.axes1,'visible','off');

        %cla reset; % Do a complete and total reset of the axes.

        % Delete static text   
            set(handles.text14,'visible','off');

        % pushbutton_save not visible 
        set(handles.pushbutton_save,'enable','off');

        set(0,'ShowHiddenHandles','on');

        guidata(hObject,handles);

	end

%% ---------------------------------------------------------------------------
	function pushbutton_back_Callback(hObject,evendata) 
     
        % return to main
        pushbutton_reset_Callback(hObject,evendata);
        close(device_ode);
        main_device;
    end

%% ---------------------------------------------------------------------------
	function pushbutton_save_Callback(hObject,evendata) %#ok<INUSD>
    
        K = str2num(get(handles.edit_K, 'String'));
        tau = str2num(get(handles.edit_tau, 'String'));
        zeta = str2num(get(handles.edit_zeta, 'String'));

        F=getframe(handles.axes1); %select axes in GUI
        figure(); %new figure
        image(F.cdata); %show selected axes in new figure
        nameoffigure = strcat('resultsode_K=',num2str(K),'tau=',...
            num2str(tau),'zeta=',num2str(zeta));
        saveas(gcf, nameoffigure, 'png'); %save figure
        close(gcf); %and close it 
    end

%% ---------------------------------------------------------------------------
	function pushbutton_tf_Callback(hObject,evendata) %#ok<INUSD>
        % pushbutton_save not visible 
        set(handles.pushbutton_save,'enable','off');

     % Validate that the text in the coefficients parameters K, tau, zeta
     % field converts to a real number

        K = str2num(get(handles.edit_K, 'String'));
        tau = str2num(get(handles.edit_tau, 'String'));
        zeta = str2num(get(handles.edit_zeta, 'String'));

     % Validate that the text in the initial conditions y0 and dy0
     % field converts to a real number

        y0 = str2num(get(handles.edit_y0, 'String'));
        dy0 = str2num(get(handles.edit_dy0, 'String'));

     % Delete plot 
        cla(handles.axes1,'reset'); % Make averSpec the current axes.
        set(handles.axes1,'visible','off');

    % pushbutton_save not visible 
        set(handles.pushbutton_save,'enable','off');

     % Display static text   
        set(handles.text14,'visible','on');

     % Display TF
        sys = transffcn(K,tau,zeta,y0,dy0);
        fcn = evalc('sys');
        set(handles.text14,'String',fcn,'FontSize',14); 
    end

%% ---------------------------------------------------------------------------
	function edit_K_Callback(hObject,evendata) %#ok<INUSD>
    
        %get the user entered value for K and convert it to a string
        edit_K = get(hObject,'String');
        K = str2num(edit_K);

        if isnan(K) || ~isreal(K)  
            % isdouble returns NaN for non-numbers and K cannot be complex
            % Disable the Plot button and change its string to say why
            uiwait(msgbox('Gain`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the K
            set(handles.edit_K,'Value',K);

        end
        % To pass variables or objects between callbacks using GUI handles
        guidata(hObject,handles);
	end

%% ---------------------------------------------------------------------------
	function edit_K_CreateFcn(hObject,evendata) %#ok<INUSD>
    
        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        
        %set the default gain to be 1
        set(hObject,'String','1.0');
        evalin('base','1.0;');
	end

%% ---------------------------------------------------------------------------
	function edit_tau_Callback(hObject,evendata) %#ok<INUSD>

         %get the user entered value for time constant and convert it to a string
        edit_tau = get(hObject,'String');
        tau = str2num(edit_tau);

        if isnan(tau) || ~isreal(tau) || tau <= 0 
            % isdouble returns NaN for non-numbers and tau cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Time constant`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tau
            set(handles.edit_tau,'Value',tau);
        end
	end

%% ---------------------------------------------------------------------------
	function edit_tau_CreateFcn(hObject,evendata) %#ok<INUSD>

        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default time constant to be 1
        set(hObject,'String','1.0');
        evalin('base','1.0;');
	end

%% ---------------------------------------------------------------------------
	function edit_zeta_Callback(hObject,evendata) %#ok<INUSD>

        %get the user entered value for time constant and convert it to a string
        edit_zeta = get(hObject,'String');
        zeta = str2num(edit_zeta);

        if isnan(zeta) || ~isreal(zeta) || zeta < 0 || zeta > 1
            % isdouble returns NaN for non-numbers and zeta cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Damping factor`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tau
            set(handles.edit_zeta,'Value',zeta);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_zeta_CreateFcn(hObject,evendata) %#ok<INUSD>

        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default damping factor to be 1
        set(hObject,'String','1.0');
        evalin('base','1.0;');
	end

%% ---------------------------------------------------------------------------
	function edit_y0_Callback(hObject,evendata) %#ok<INUSD>
    
        %get the user entered value for dy0 and convert it to a string
        edit_y0 = get(hObject,'String');
        y0 = str2num(edit_y0);

        if isnan(y0) || ~isreal(y0) 
            % isdouble returns NaN for non-numbers and y0 cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tau
            set(handles.edit_y0,'Value',y0);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_y0_CreateFcn(hObject,evendata) %#ok<INUSD>
        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default y0 to be 0
        set(hObject,'String','0');
        evalin('base','0;');
	end

%% ---------------------------------------------------------------------------
	function edit_dy0_Callback(hObject,evendata) %#ok<INUSD>
     
        %get the user entered value for dy0 and convert it to a string
        edit_dy0 = get(hObject,'String');
        dy0 = str2num(edit_dy0);

        if isnan(dy0) || ~isreal(dy0) 
            % isdouble returns NaN for non-numbers and dy0 cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tau
            set(handles.edit_dy0,'Value',dy0);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_dy0_CreateFcn(hObject,evendata) %#ok<INUSD>
         
        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default dy0 to be 0
        set(hObject,'String','1.0');
        evalin('base','1.0;');
	end

%% ---------------------------------------------------------------------------
	function edit_t0_Callback(hObject,evendata) %#ok<INUSD>

        %get the user entered value for initial time and convert it to a string
        edit_t0 = get(hObject,'String');
        t0 = str2num(edit_t0);

        step = str2num(get(handles.edit_step, 'String'));
        tf = str2num(get(handles.edit_tf, 'String'));

        if isnan(t0) || ~isreal(t0) || t0 < 0 || t0 >= step || t0 >= tf
            % isdouble returns NaN for non-numbers and t0 cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Initial time`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tau
            set(handles.edit_t0,'Value',t0);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_t0_CreateFcn(hObject,evendata) %#ok<INUSD>

       if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default t0 to be 0
        set(hObject,'String','0');
        evalin('base','0;');
	end

%% ---------------------------------------------------------------------------
	function edit_step_Callback(hObject,evendata) %#ok<INUSD>

        %get the user entered value for delta time and convert it to a string
        edit_step = get(hObject,'String');
        step = str2num(edit_step); %#ok<*ST2NM>

        t0 = str2num(get(handles.edit_t0, 'String'));
        tf = str2num(get(handles.edit_tf, 'String'));

        if isnan(step) || ~isreal(step) || step < 0 || step >= tf || step <= t0

            % isdouble returns NaN for non-numbers and t0 cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Step time`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the t0
            set(handles.edit_step,'Value',step);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_step_CreateFcn(hObject,evendata) %#ok<INUSD>

        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default delta time to be 0.1
        set(hObject,'String','0.1');
        evalin('base','0.1;');
	end

%% ---------------------------------------------------------------------------
	function edit_tf_Callback(hObject,evendata) %#ok<INUSD>

         %get the user entered value for final time and convert it to a string
        edit_tf = get(hObject,'String');
        tf = str2num(edit_tf);
        t0 = str2num(get(handles.edit_t0, 'String'));
        step = str2num(get(handles.edit_step, 'String'));

        if isnan(tf) || ~isreal(tf) || tf < 0  || tf <= t0 || tf <= step
            % isdouble returns NaN for non-numbers and tf cannot be complex
            % Disable the plot button and change its string to say why
            uiwait(msgbox('Final time`s value is not valid!','Erro','error'));
            % Give the edit text box focus so user can correct the error
            uicontrol(hObject);
        else       
        %    Set the value of the tf
            set(handles.edit_tf,'Value',tf);

        end
	end

%% ---------------------------------------------------------------------------
	function edit_tf_CreateFcn(hObject,evendata) %#ok<INUSD>

        if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
            set(hObject,'BackgroundColor','white');
        end
        %set the default tf to be 10
        set(hObject,'String','10');
        evalin('base','10;');
	end

end

%% ----------------------------------------------

% 2nd ODE system
    function dy = system(t,y,u)

        % input variable
        y1 = y(1);
        y2 = y(2);
        % manipulated variable
        k = u(1);
        tau = u(2);
        zeta = u(3);
        % system of ODE
        dy1 = y2;
        dy2 = 1/tau^2*(k - 2*tau*zeta*y2 - y1);
        % output
        dy = [dy1;dy2];
    end
    %% ----------------------------------------------
% Transfer function
 function fcn = transffcn(K,tau,zeta,y0,dy0)
    % auxiliar function to obtain FT
    
        aux1 = 2*zeta*tau;
        aux2 = aux1*y0 + tau^2*dy0;
        num = K*[tau^2*y0 aux2];
        den = [tau^2 aux1 1];
        fcn = tf(num,den);
 end